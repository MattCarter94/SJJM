-- MySQL Script generated by MySQL Workbench
-- 11/09/16 17:04:15
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Customer` (
  `Email` VARCHAR(45) NOT NULL COMMENT '',
  `First_Name` VARCHAR(45) NOT NULL COMMENT '',
  `Surname` VARCHAR(45) NOT NULL COMMENT '',
  `Credit` INT NOT NULL COMMENT '',
  `Phone_Number` INT NOT NULL COMMENT '',
  `Password` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`Email`)  COMMENT '',
  UNIQUE INDEX `Email_UNIQUE` (`Email` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Address` (
  `Address_ID` INT NOT NULL COMMENT '',
  `Address_1` VARCHAR(45) NOT NULL COMMENT '',
  `Address_2` VARCHAR(45) NULL COMMENT '',
  `Town` VARCHAR(45) NOT NULL COMMENT '',
  `County` VARCHAR(45) NOT NULL COMMENT '',
  `Postcode` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`Address_ID`)  COMMENT '',
  UNIQUE INDEX `Address_ID_UNIQUE` (`Address_ID` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Card_Details`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Card_Details` (
  `Card_Number` INT NOT NULL COMMENT '',
  `Address_ID` INT NOT NULL COMMENT '',
  `Name_On_Card` VARCHAR(45) NOT NULL COMMENT '',
  `Card_Expiry` DATETIME NOT NULL COMMENT '',
  PRIMARY KEY (`Card_Number`)  COMMENT '',
  UNIQUE INDEX `Card_Number_UNIQUE` (`Card_Number` ASC)  COMMENT '',
  CONSTRAINT `Address_ID`
    FOREIGN KEY (`Address_ID`)
    REFERENCES `mydb`.`Address` (`Address_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Customer_Card`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Customer_Card` (
  `Card_Number` INT NOT NULL COMMENT '',
  `Email` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`Card_Number`, `Email`)  COMMENT '',
  CONSTRAINT `Card_Number`
    FOREIGN KEY (`Card_Number`)
    REFERENCES `mydb`.`Card_Details` (`Card_Number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Email`
    FOREIGN KEY (`Email`)
    REFERENCES `mydb`.`Customer` (`Email`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Customer_Order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Customer_Order` (
  `Customer_Order_ID` INT NOT NULL COMMENT '',
  `Customer_Email` VARCHAR(45) NOT NULL COMMENT '',
  `Address_Address_ID` INT NOT NULL COMMENT '',
  `Card_Number` INT NOT NULL COMMENT '',
  `Date_Placed` DATETIME NULL COMMENT '',
  `Date_Delivered` DATETIME NOT NULL COMMENT '',
  `Status` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`Customer_Order_ID`, `Date_Delivered`)  COMMENT '',
  UNIQUE INDEX `Customer_Order_ID_UNIQUE` (`Customer_Order_ID` ASC)  COMMENT '',
  INDEX `fk_Customer_Order_Customer1_idx` (`Customer_Email` ASC)  COMMENT '',
  INDEX `fk_Customer_Order_Address1_idx` (`Address_Address_ID` ASC)  COMMENT '',
  INDEX `fk_Customer_Order_Card_Details1_idx` (`Card_Number` ASC)  COMMENT '',
  CONSTRAINT `fk_Customer_Order_Customer1`
    FOREIGN KEY (`Customer_Email`)
    REFERENCES `mydb`.`Customer` (`Email`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Customer_Order_Address1`
    FOREIGN KEY (`Address_Address_ID`)
    REFERENCES `mydb`.`Address` (`Address_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Customer_Order_Card_Details1`
    FOREIGN KEY (`Card_Number`)
    REFERENCES `mydb`.`Card_Details` (`Card_Number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Product` (
  `Product_ID` INT NOT NULL COMMENT '',
  `Title` VARCHAR(45) NOT NULL COMMENT '',
  `Price` DOUBLE NOT NULL COMMENT '',
  `Description` VARCHAR(45) NOT NULL COMMENT '',
  `Category` VARCHAR(45) NULL COMMENT '',
  `Image` VARCHAR(45) NULL COMMENT '',
  `Tags` VARCHAR(45) NULL COMMENT '',
  `Status` VARCHAR(45) NULL COMMENT '',
  `Stock` INT NOT NULL COMMENT '',
  `Max_Stock` INT NOT NULL COMMENT '',
  PRIMARY KEY (`Product_ID`)  COMMENT '',
  UNIQUE INDEX `Product_ID_UNIQUE` (`Product_ID` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Supplier`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Supplier` (
  `Supplier_ID` INT NOT NULL COMMENT '',
  `Name` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`Supplier_ID`)  COMMENT '',
  UNIQUE INDEX `Supplier_ID_UNIQUE` (`Supplier_ID` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Stock_Order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Stock_Order` (
  `Stock_Order_ID` INT NOT NULL COMMENT '',
  `Supplier_ID` INT NOT NULL COMMENT '',
  `Stock_Order_Date` DATETIME NOT NULL COMMENT '',
  `Stock_Recieve_Date` DATETIME NULL COMMENT '',
  PRIMARY KEY (`Stock_Order_ID`)  COMMENT '',
  UNIQUE INDEX `Stock_Order_ID_UNIQUE` (`Stock_Order_ID` ASC)  COMMENT '',
  UNIQUE INDEX `Supplier_ID_UNIQUE` (`Supplier_ID` ASC)  COMMENT '',
  CONSTRAINT `Supplier_ID`
    FOREIGN KEY (`Supplier_ID`)
    REFERENCES `mydb`.`Supplier` (`Supplier_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Customer_Address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Customer_Address` (
  `Customer_Email` VARCHAR(45) NOT NULL COMMENT '',
  `Address_Address_ID` INT NOT NULL COMMENT '',
  PRIMARY KEY (`Customer_Email`, `Address_Address_ID`)  COMMENT '',
  INDEX `fk_Customer_has_Address_Address1_idx` (`Address_Address_ID` ASC)  COMMENT '',
  INDEX `fk_Customer_has_Address_Customer1_idx` (`Customer_Email` ASC)  COMMENT '',
  CONSTRAINT `fk_Customer_has_Address_Customer1`
    FOREIGN KEY (`Customer_Email`)
    REFERENCES `mydb`.`Customer` (`Email`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Customer_has_Address_Address1`
    FOREIGN KEY (`Address_Address_ID`)
    REFERENCES `mydb`.`Address` (`Address_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Wishlist_Product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Wishlist_Product` (
  `Customer_Email` VARCHAR(45) NOT NULL COMMENT '',
  `Product_Product_ID` INT NOT NULL COMMENT '',
  PRIMARY KEY (`Customer_Email`, `Product_Product_ID`)  COMMENT '',
  INDEX `fk_Customer_has_Product_Product1_idx` (`Product_Product_ID` ASC)  COMMENT '',
  INDEX `fk_Customer_has_Product_Customer1_idx` (`Customer_Email` ASC)  COMMENT '',
  CONSTRAINT `fk_Customer_has_Product_Customer1`
    FOREIGN KEY (`Customer_Email`)
    REFERENCES `mydb`.`Customer` (`Email`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Customer_has_Product_Product1`
    FOREIGN KEY (`Product_Product_ID`)
    REFERENCES `mydb`.`Product` (`Product_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Stock_Line`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Stock_Line` (
  `Product_Product_ID` INT NOT NULL COMMENT '',
  `Stock_Order_ID` INT NOT NULL COMMENT '',
  `Quantity` INT NULL COMMENT '',
  `Price` DOUBLE NULL COMMENT '',
  PRIMARY KEY (`Product_Product_ID`, `Stock_Order_ID`)  COMMENT '',
  INDEX `fk_Product_has_Stock_Order_Stock_Order1_idx` (`Stock_Order_ID` ASC)  COMMENT '',
  INDEX `fk_Product_has_Stock_Order_Product1_idx` (`Product_Product_ID` ASC)  COMMENT '',
  CONSTRAINT `fk_Product_has_Stock_Order_Product1`
    FOREIGN KEY (`Product_Product_ID`)
    REFERENCES `mydb`.`Product` (`Product_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Product_has_Stock_Order_Stock_Order1`
    FOREIGN KEY (`Stock_Order_ID`)
    REFERENCES `mydb`.`Stock_Order` (`Stock_Order_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Supplier_Product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Supplier_Product` (
  `Product_Product_ID` INT NOT NULL COMMENT '',
  `Supplier_Supplier_ID` INT NOT NULL COMMENT '',
  `Price_1_Unit` DOUBLE NULL COMMENT '',
  `Price_10_Unit` DOUBLE NULL COMMENT '',
  `Price_100_Unit` DOUBLE NULL COMMENT '',
  `Supplier_Productcol` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`Product_Product_ID`, `Supplier_Supplier_ID`)  COMMENT '',
  INDEX `fk_Product_has_Supplier_Supplier1_idx` (`Supplier_Supplier_ID` ASC)  COMMENT '',
  INDEX `fk_Product_has_Supplier_Product1_idx` (`Product_Product_ID` ASC)  COMMENT '',
  CONSTRAINT `fk_Product_has_Supplier_Product1`
    FOREIGN KEY (`Product_Product_ID`)
    REFERENCES `mydb`.`Product` (`Product_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Product_has_Supplier_Supplier1`
    FOREIGN KEY (`Supplier_Supplier_ID`)
    REFERENCES `mydb`.`Supplier` (`Supplier_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Order_Line`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Order_Line` (
  `Customer_Order_ID` INT NOT NULL COMMENT '',
  `Product_Product_ID` INT NOT NULL COMMENT '',
  `Quantity` INT NULL COMMENT '',
  `Price` DOUBLE NULL COMMENT '',
  PRIMARY KEY (`Customer_Order_ID`, `Product_Product_ID`)  COMMENT '',
  INDEX `fk_Customer_Order_has_Product_Product1_idx` (`Product_Product_ID` ASC)  COMMENT '',
  INDEX `fk_Customer_Order_has_Product_Customer_Order1_idx` (`Customer_Order_ID` ASC)  COMMENT '',
  CONSTRAINT `fk_Customer_Order_has_Product_Customer_Order1`
    FOREIGN KEY (`Customer_Order_ID`)
    REFERENCES `mydb`.`Customer_Order` (`Customer_Order_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Customer_Order_has_Product_Product1`
    FOREIGN KEY (`Product_Product_ID`)
    REFERENCES `mydb`.`Product` (`Product_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
